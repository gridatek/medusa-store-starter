name: CI - Architecture Validation

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test-architecture:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: medusa-store
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Backend Environment
        run: |
          cd backend
          cp .env.template .env || echo "No .env.template found, creating basic .env"
          cat >> .env << EOF
          DATABASE_URL=postgres://postgres:postgres@localhost:5432/medusa-store
          REDIS_URL=redis://localhost:6379
          JWT_SECRET=test-secret
          COOKIE_SECRET=test-cookie-secret
          NODE_ENV=development
          PORT=9000
          EOF

      - name: Build and migrate backend
        run: |
          cd backend
          npm run build
          npx medusa db:migrate

      - name: Seed database (optional)
        run: |
          cd backend
          npm run seed || echo "No seed script found, skipping..."
        continue-on-error: true

      - name: Start Medusa backend
        run: |
          cd backend
          npm run start &
          echo $! > ../backend.pid
        env:
          NODE_ENV: development

      - name: Wait for backend to be ready
        run: |
          echo "Waiting for Medusa backend..."
          timeout 60s bash -c 'until curl -f http://localhost:9000/health; do sleep 2; done'
          echo "Backend is ready!"

      - name: Build Angular storefront
        run: |
          cd storefront
          npm run build

      - name: Start Angular storefront
        run: |
          cd storefront
          npm run start &
          echo $! > ../storefront.pid
        env:
          NODE_ENV: development

      - name: Wait for storefront to be ready
        run: |
          echo "Waiting for Angular storefront..."
          timeout 60s bash -c 'until curl -f http://localhost:4200; do sleep 2; done'
          echo "Storefront is ready!"

      - name: Install Playwright browsers
        run: |
          cd e2e
          npx playwright install chromium

      - name: Run Playwright tests
        run: |
          cd e2e
          npm run test
        env:
          CI: true

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: e2e/playwright-report/
          retention-days: 30

      - name: Cleanup processes
        if: always()
        run: |
          if [ -f backend.pid ]; then
            kill $(cat backend.pid) || true
          fi
          if [ -f storefront.pid ]; then
            kill $(cat storefront.pid) || true
          fi

  workspace-validation:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Validate workspace structure
        run: |
          echo "Validating npm workspace structure..."
          npm run validate-workspace || echo "No validate-workspace script found"

          # Check if all workspace packages can be installed
          npm ci

          # Verify workspace packages
          npm ls --workspaces || true

          echo "Workspace validation completed!"

      - name: Check workspace scripts
        run: |
          echo "Available workspace scripts:"
          npm run || true

          echo "Backend scripts:"
          cd backend && npm run || true

          echo "Storefront scripts:"
          cd ../storefront && npm run || true

          echo "E2E scripts:"
          cd ../e2e && npm run || true
